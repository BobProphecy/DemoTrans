from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.types import *
from prophecy.utils import *
from prophecy.libs import typed_lit
from job.config.ConfigStore import *
from job.udfs.UDFs import *

def AlteryxSelect_262(spark: SparkSession, in0: DataFrame) -> DataFrame:
    return in0.select(
        col("Lead"), 
        col("DaisyChain"), 
        col("ScrewRetention"), 
        col("Shield"), 
        col("DifferentialPair"), 
        col("Retention"), 
        col("DeadChannels"), 
        col("ReverseNotch"), 
        col("Rows"), 
        col("WiringOption"), 
        col("SurfaceMount"), 
        col("Entry"), 
        col("FiberType"), 
        col("Ends"), 
        col("OutsideReverse"), 
        col("MechanicalSample"), 
        col("Length"), 
        col("Packaging"), 
        col("ReverseWire"), 
        col("OpticEnd"), 
        col("Alignment"), 
        col("CableRetention"), 
        col("Direction"), 
        col("ReverseConnector"), 
        col("Pitch"), 
        col("Positions"), 
        col("Latching"), 
        col("CableOptions"), 
        col("LeadFree"), 
        col("Speed"), 
        col("Notch"), 
        col("Engines"), 
        col("PowerPins"), 
        col("ReceivingChannels"), 
        col("MiddleReverse"), 
        col("TransmittingChannels"), 
        col("Breakout"), 
        col("Pad"), 
        col("OpticsType"), 
        col("Gender"), 
        col("Key"), 
        col("SpaceOption"), 
        col("StrainRelief"), 
        col("WireGauge"), 
        col("Plating"), 
        col("Polarized"), 
        col("Mount"), 
        col("`Finished Good Part`").alias("Finished Good Part"), 
        col("`Tooling Set`").alias("Tooling Set"), 
        col("ProcessOrderId"), 
        col("OrderNumber"), 
        col("LineNumber"), 
        col("StepNumber"), 
        col("RunHours"), 
        col("SetupHours"), 
        col("IsProcessCompleted"), 
        col("ManufacturingDueDate"), 
        col("DeliveryDueDate"), 
        col("CompletedHours"), 
        col("ScrapHours"), 
        col("QTYproducedTotal"), 
        col("ScrapQuantity"), 
        col("QTYProcessedWC"), 
        col("QTYProcessedPO"), 
        col("ManufacturingOrderId"), 
        col("QuantityRequired"), 
        col("Facility"), 
        col("Process"), 
        col("ReportingSeriesCode"), 
        col("`Like Part`").alias("Like Part"), 
        col("WorkCenterNumber"), 
        col("Routing"), 
        col("IsCustomerOrder"), 
        col("Plant"), 
        col("ReviewBoard"), 
        col("Country"), 
        col("WorkCenter"), 
        col("`Machine Group ID`").alias("Machine Group ID"), 
        col("`Machine Type`").alias("Machine Type"), 
        col("`Automation Level`").alias("Automation Level"), 
        col("Pipeline"), 
        col("`Target Utilization`").alias("Target Utilization"), 
        col("`Projected Annual Growth`").alias("Projected Annual Growth"), 
        col("`Days per Month`").alias("Days per Month"), 
        col("`Days per Quarter`").alias("Days per Quarter"), 
        col("`Daily Production Hours`").alias("Daily Production Hours"), 
        col("`Average Hourly Output`").alias("Average Hourly Output"), 
        col("`Machine Group Notes`").alias("Machine Group Notes"), 
        col("`Plant Process Code`").alias("Plant Process Code"), 
        col("`Part Wildcard`").alias("Part Wildcard"), 
        col("isMatch"), 
        col("IsLastDayOfMonth"), 
        col("IsLastDayofQuarter"), 
        col("`Part Number`").alias("Part Number"), 
        col("`Facility Machine Group Name`").alias("Facility Machine Group Name")
    )
