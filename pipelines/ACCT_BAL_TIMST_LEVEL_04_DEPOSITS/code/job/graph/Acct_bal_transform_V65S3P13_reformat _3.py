from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.types import *
from prophecy.utils import *
from prophecy.libs import typed_lit
from job.config.ConfigStore import *
from job.udfs.UDFs import *

def Acct_bal_transform_V65S3P13_reformat _3(spark: SparkSession, V65S3_join_link: DataFrame) -> DataFrame:
    return V65S3_join_link.select(
        col("NAICS_DESC"), 
        col("STMT_IMAGE_CD"), 
        col("INT_MRGN_RATE"), 
        col("CUR_TERM"), 
        col("LAST_STMT_DT"), 
        col("TIN"), 
        col("MST_ACCT_ID"), 
        col("OPEN_DT"), 
        col("OPEN_AMT"), 
        col("CUTOFF_STMT_FREQ_CD"), 
        col("NAICS_CD"), 
        col("SRC_SCNDY_OFCR_CD"), 
        col("GL_CC_ID"), 
        col("INT_INDX_CD"), 
        col("CONVERTED_REC_OLD_ACCT_NBR"), 
        col("RP_IND"), 
        col("CLOSE_DT"), 
        col("INT_REPRC_FREQ_TERM"), 
        col("ORIG_BANK_SHR_AMT"), 
        col("SRC_ACCT_NBR"), 
        col("ORIG_MAT_DT"), 
        col("ALLOW_RP_IND"), 
        col("SRC_BANK_NBR_DESC"), 
        col("SRC_CONVERTED_REC_CD"), 
        col("SRC_EMP_CD"), 
        col("ORIG_TERM"), 
        col("ENOTICE_IND"), 
        col("SRC_DTL_STAT_CD"), 
        col("EMP_DESC"), 
        col("CONVERTED_REC_CD"), 
        col("SRC_EMP_DESC"), 
        col("PROD_DTL_ID"), 
        col("INT_INDX_DESC"), 
        col("NEXT_INT_RATE_CHG_DT"), 
        col("ACCT_TYP"), 
        col("SRC_DTL_STAT_DESC"), 
        col("OPEN_CLOSE_CD"), 
        col("SRC_BANK_NBR"), 
        col("NEXT_STMT_DT"), 
        lit(None).alias("RPT_CC_ID"), 
        col("ORIG_INT_BEG_DT"), 
        col("SCNDY_LVL_INT_MRGN_RATE"), 
        col("ENTRY_DT"), 
        col("SHORT_NAME"), 
        col("INT_RATE_RESET_DAY_CNT"), 
        col("COMP_ID"), 
        col("RNWL_DT"), 
        col("STMT_IMAGE_DESC"), 
        col("LAST_INT_RATE_CHG_DT"), 
        col("ORIG_INT_RATE"), 
        col("RNWL_PRCS_DT"), 
        col("INT_ACCR_BASIS_DESC"), 
        col("SRC_INT_REPRC_DESC"), 
        col("APPL_DESC"), 
        lit(None).alias("GL_LDGR_ACCT_ID"), 
        col("SRC_PRMY_OFCR_CD"), 
        col("APPL_CD"), 
        col("SRC_INT_INDX_CD"), 
        col("PRCS_DT"), 
        col("PRGD_IND"), 
        col("AS_OF_DT"), 
        col("CUTOFF_STMT_TERM"), 
        col("INT_BEG_DT"), 
        col("OPEN_CLOSE_DESC"), 
        col("ORIG_INT_INDX_BASE_RATE"), 
        col("SCNDY_LVL_INT_MRGN_ACTION_CD"), 
        col("EMP_CD"), 
        col("SRC_RPT_BRNCH_NBR"), 
        when((col("RptRecInd") == lit("N")), col("RptRecInd")).otherwise(col("RPT_REC_IND")).alias("RPT_REC_IND"), 
        col("ACCT_ID"), 
        col("INT_ACCR_BASIS_CD"), 
        col("INT_MRGN_ACTION_CD"), 
        col("SRC_INT_ACCR_BASIS_CD"), 
        col("ORIG_OPEN_DT"), 
        col("MST_ACCT_EFF_DT"), 
        col("SRC_INT_MRGN_ACTION_CD"), 
        col("SRC_INT_REPRC_FREQ_CD"), 
        col("MAT_DT"), 
        col("INT_RATE_TYP"), 
        col("RATE_INDX_ID"), 
        col("SRC_INT_REPRC_FREQ_TERM"), 
        col("STMT_ACCT_NBR"), 
        col("SIC_CD"), 
        col("TAX_ID_TYP"), 
        col("SRC_TAX_ID_TYP")
    )
